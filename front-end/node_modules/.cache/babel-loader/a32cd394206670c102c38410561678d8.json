{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\OneDrive\\\\Desktop\\\\Full_stack_Project\\\\Chatapplication\\\\Full-stack-project-springboot-ChatApp\\\\front-end\\\\src\\\\components\\\\ChatRoom.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { over } from \"stompjs\";\nimport SockJS from \"sockjs-client\";\nimport Login from \"./Login\";\nimport \"./ChatRoom.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\n\nconst ChatRoom = () => {\n  _s();\n\n  const [privateChats, setPrivateChats] = useState(new Map());\n  const [publicChats, setPublicChats] = useState([]);\n  const [tab, setTab] = useState(\"CHATROOM\");\n  const [userData, setUserData] = useState({\n    username: \"\",\n    receivername: \"\",\n    connected: false,\n    message: \"\",\n    file: \"\",\n    email: \"\"\n  });\n  const [file, setfile] = useState(false);\n\n  const fuc = () => {\n    if (localStorage.getItem(\"userData\")) {\n      console.log(\"in if\");\n      var storedData = localStorage.getItem('userData');\n      var parseData = JSON.parse(storedData); // Use the previous state correctly\n\n      setUserData(userDa => ({ ...prevUserData,\n        username: parseData.username,\n        email: parseData.email,\n        connected: true\n      })); // Note: This console.log might not log the updated state immediately\n\n      console.log(userData);\n    } else {\n      console.log(\"in else\");\n      setUserData(prevUserData => ({ ...prevUserData,\n        connected: false\n      }));\n    }\n  };\n\n  useEffect(() => {\n    fuc();\n  }, []);\n\n  const connect = () => {\n    let Sock = new SockJS(\"http://localhost:9090/ws\");\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  };\n\n  const onConnected = () => {\n    setUserData({ ...userData,\n      connected: true\n    });\n    stompClient.subscribe(\"/chatroom/public\", onMessageReceived);\n    stompClient.subscribe(\"/user/\" + userData.username + \"/private\", onPrivateMessage);\n    userJoin();\n  };\n\n  const userJoin = () => {\n    var chatMessage = {\n      senderName: userData.username,\n      status: \"JOIN\"\n    };\n    stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\n  };\n\n  const onMessageReceived = payload => {\n    var payloadData = JSON.parse(payload.body);\n\n    switch (payloadData.status) {\n      case \"JOIN\":\n        if (!privateChats.get(payloadData.senderName)) {\n          privateChats.set(payloadData.senderName, []);\n          setPrivateChats(new Map(privateChats));\n        }\n\n        break;\n\n      case \"MESSAGE\":\n        publicChats.push(payloadData);\n        setPublicChats([...publicChats]);\n        break;\n    }\n  };\n\n  const onPrivateMessage = payload => {\n    console.log(payload);\n    var payloadData = JSON.parse(payload.body);\n\n    if (privateChats.get(payloadData.senderName)) {\n      privateChats.get(payloadData.senderName).push(payloadData);\n      setPrivateChats(new Map(privateChats));\n    } else {\n      let list = [];\n      list.push(payloadData);\n      privateChats.set(payloadData.senderName, list);\n      setPrivateChats(new Map(privateChats));\n    }\n  };\n\n  const onError = err => {\n    console.log(err);\n  };\n\n  const handleMessage = event => {\n    setUserData({ ...userData,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleFile = event => {\n    setfile(true);\n    console.log(file);\n    setUserData({ ...userData,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const sendValue = () => {\n    if (stompClient) {\n      console.log(\"h\");\n      var chatMessage = {\n        senderName: userData.username,\n        message: userData.message,\n        status: \"MESSAGE\"\n      };\n      console.log(chatMessage);\n      stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\n      setUserData({ ...userData,\n        message: \"\"\n      }); // setUserData({ ...userData, file: \"\"});\n    }\n  };\n\n  const sendPrivateValue = () => {\n    if (stompClient) {\n      var chatMessage = {\n        senderName: userData.username,\n        receiverName: tab,\n        message: userData.message,\n        status: \"MESSAGE\"\n      };\n\n      if (userData.username !== tab) {\n        privateChats.get(tab).push(chatMessage);\n        setPrivateChats(new Map(privateChats));\n      }\n\n      stompClient.send(\"/app/private-message\", {}, JSON.stringify(chatMessage));\n      setUserData({ ...userData,\n        message: \"\"\n      }); // setUserData({ ...userData, file: \"\"});\n    }\n  };\n\n  const registerUser = e => {\n    console.log(userData);\n    connect();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: userData.connected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"member-list\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              setTab(\"CHATROOM\");\n            },\n            className: `member ${tab === \"CHATROOM\" && \"active\"}`,\n            children: \"Chatroom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), [...privateChats.keys()].map((name, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              setTab(name);\n            },\n            className: `member ${tab === name && \"active\"}`,\n            children: name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), tab === \"CHATROOM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [file ? null : /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: publicChats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `message ${chat.senderName === userData.username && \"self\"}`,\n            children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-data\",\n              children: chat.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 23\n            }, this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar self\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 25\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"enter the message\",\n            value: userData.message,\n            name: \"message\",\n            onChange: handleMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"file\",\n            name: \"file\",\n            onChange: handleFile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button Button\",\n            onClick: sendValue,\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }, this), tab !== \"CHATROOM\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages\",\n          children: [...privateChats.get(tab)].map((chat, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `message ${chat.senderName === userData.username && \"self\"}`,\n            children: [chat.senderName !== userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-data\",\n              children: chat.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 21\n            }, this), chat.senderName === userData.username && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar self\",\n              children: chat.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"send-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-message\",\n            placeholder: \"enter the message\",\n            value: userData.message,\n            name: \"message\",\n            onChange: handleMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"file\",\n            name: \"file\",\n            onChange: handleFile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"send-button Button\",\n            onClick: sendPrivateValue,\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {\n      userData: userData,\n      setUserData: setUserData,\n      registerUser: registerUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatRoom, \"y+QVTbk0hYrPDZoIEW1z0mhh8ec=\");\n\n_c = ChatRoom;\nexport default ChatRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"sources":["C:/Users/asus/OneDrive/Desktop/Full_stack_Project/Chatapplication/Full-stack-project-springboot-ChatApp/front-end/src/components/ChatRoom.jsx"],"names":["React","useEffect","useState","over","SockJS","Login","stompClient","ChatRoom","privateChats","setPrivateChats","Map","publicChats","setPublicChats","tab","setTab","userData","setUserData","username","receivername","connected","message","file","email","setfile","fuc","localStorage","getItem","console","log","storedData","parseData","JSON","parse","userDa","prevUserData","connect","Sock","onConnected","onError","subscribe","onMessageReceived","onPrivateMessage","userJoin","chatMessage","senderName","status","send","stringify","payload","payloadData","body","get","set","push","list","err","handleMessage","event","target","name","value","handleFile","sendValue","sendPrivateValue","receiverName","registerUser","e","keys","map","index","chat"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { over } from \"stompjs\";\r\nimport SockJS from \"sockjs-client\";\r\nimport Login from \"./Login\";\r\nimport \"./ChatRoom.css\";\r\n\r\nvar stompClient = null;\r\nconst ChatRoom = () => {\r\n  const [privateChats, setPrivateChats] = useState(new Map());\r\n  const [publicChats, setPublicChats] = useState([]);\r\n  const [tab, setTab] = useState(\"CHATROOM\");\r\n  const [userData, setUserData] = useState({\r\n    username: \"\",\r\n    receivername: \"\",\r\n    connected: false,\r\n    message: \"\",\r\n    file: \"\",\r\n    email: \"\",\r\n  });\r\n  const [file, setfile] = useState(false);\r\n\r\n  const fuc = () => {\r\n    if (localStorage.getItem(\"userData\")) {\r\n      console.log(\"in if\");\r\n      var storedData = localStorage.getItem('userData');\r\n      var parseData = JSON.parse(storedData);\r\n  \r\n      // Use the previous state correctly\r\n      setUserData(userDa => ({\r\n        ...prevUserData,\r\n        username: parseData.username,\r\n        email: parseData.email,\r\n        connected: true\r\n      }));\r\n  \r\n      // Note: This console.log might not log the updated state immediately\r\n      console.log(userData);\r\n    } else {\r\n      console.log(\"in else\");\r\n      setUserData(prevUserData => ({\r\n        ...prevUserData,\r\n        connected: false\r\n      }));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fuc();\r\n  }, []);\r\n\r\n \r\n  const connect = () => {\r\n    let Sock = new SockJS(\"http://localhost:9090/ws\");\r\n    stompClient = over(Sock);\r\n    stompClient.connect({}, onConnected, onError);\r\n  };\r\n\r\n  const onConnected = () => {\r\n    setUserData({ ...userData, connected: true });\r\n    stompClient.subscribe(\"/chatroom/public\", onMessageReceived);\r\n    stompClient.subscribe(\r\n      \"/user/\" + userData.username + \"/private\",\r\n      onPrivateMessage\r\n    );\r\n    userJoin();\r\n  };\r\n\r\n  const userJoin = () => {\r\n    var chatMessage = {\r\n      senderName: userData.username,\r\n      status: \"JOIN\",\r\n    };\r\n    stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\r\n  };\r\n\r\n  const onMessageReceived = (payload) => {\r\n    var payloadData = JSON.parse(payload.body);\r\n    switch (payloadData.status) {\r\n      case \"JOIN\":\r\n        if (!privateChats.get(payloadData.senderName)) {\r\n          privateChats.set(payloadData.senderName, []);\r\n          setPrivateChats(new Map(privateChats));\r\n        }\r\n        break;\r\n      case \"MESSAGE\":\r\n        publicChats.push(payloadData);\r\n        setPublicChats([...publicChats]);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onPrivateMessage = (payload) => {\r\n    console.log(payload);\r\n    var payloadData = JSON.parse(payload.body);\r\n    if (privateChats.get(payloadData.senderName)) {\r\n      privateChats.get(payloadData.senderName).push(payloadData);\r\n      setPrivateChats(new Map(privateChats));\r\n    } else {\r\n      let list = [];\r\n      list.push(payloadData);\r\n      privateChats.set(payloadData.senderName, list);\r\n      setPrivateChats(new Map(privateChats));\r\n    }\r\n  };\r\n\r\n  const onError = (err) => {\r\n    console.log(err);\r\n  };\r\n\r\n  const handleMessage = (event) => {\r\n    setUserData({ ...userData, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleFile = (event) => {\r\n    setfile(true);\r\n    console.log(file);\r\n    setUserData({ ...userData, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const sendValue = () => {\r\n    if (stompClient) {\r\n      console.log(\"h\");\r\n      var chatMessage = {\r\n        senderName: userData.username,\r\n        message: userData.message,\r\n        status: \"MESSAGE\",\r\n      };\r\n      console.log(chatMessage);\r\n      stompClient.send(\"/app/message\", {}, JSON.stringify(chatMessage));\r\n      setUserData({ ...userData, message: \"\" });\r\n      // setUserData({ ...userData, file: \"\"});\r\n    }\r\n  };\r\n\r\n  const sendPrivateValue = () => {\r\n    if (stompClient) {\r\n      var chatMessage = {\r\n        senderName: userData.username,\r\n        receiverName: tab,\r\n        message: userData.message,\r\n        status: \"MESSAGE\",\r\n      };\r\n\r\n      if (userData.username !== tab) {\r\n        privateChats.get(tab).push(chatMessage);\r\n        setPrivateChats(new Map(privateChats));\r\n      }\r\n      stompClient.send(\"/app/private-message\", {}, JSON.stringify(chatMessage));\r\n      setUserData({ ...userData, message: \"\" });\r\n      // setUserData({ ...userData, file: \"\"});\r\n    }\r\n  };\r\n\r\n  const registerUser = (e) => {\r\n    console.log(userData);\r\n    connect();\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      {userData.connected ? (\r\n        <div className=\"chat-box\">\r\n          <div className=\"member-list\">\r\n            <ul>\r\n              <li\r\n                onClick={() => {\r\n                  setTab(\"CHATROOM\");\r\n                }}\r\n                className={`member ${tab === \"CHATROOM\" && \"active\"}`}\r\n              >\r\n                Chatroom\r\n              </li>\r\n              {[...privateChats.keys()].map((name, index) => (\r\n                <li\r\n                  onClick={() => {\r\n                    setTab(name);\r\n                  }}\r\n                  className={`member ${tab === name && \"active\"}`}\r\n                  key={index}\r\n                >\r\n                  {name}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          {tab === \"CHATROOM\" && (\r\n            <div className=\"chat-content\">\r\n              {file ? null : (\r\n                <ul className=\"chat-messages\">\r\n                  {publicChats.map((chat, index) => (\r\n                    <li\r\n                      className={`message ${\r\n                        chat.senderName === userData.username && \"self\"\r\n                      }`}\r\n                      key={index}\r\n                    >\r\n                      {chat.senderName !== userData.username && (\r\n                        <div className=\"avatar\">{chat.senderName}</div>\r\n                      )}\r\n                      <div className=\"message-data\">{chat.message}</div>\r\n                      {chat.senderName === userData.username && (\r\n                        <div className=\"avatar self\">{chat.senderName}</div>\r\n                      )}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              )}\r\n\r\n              <div className=\"send-message\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input-message\"\r\n                  placeholder=\"enter the message\"\r\n                  value={userData.message}\r\n                  name=\"message\"\r\n                  onChange={handleMessage}\r\n                ></input>\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"file\"\r\n                  name=\"file\"\r\n                  onChange={handleFile}\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"send-button Button\"\r\n                  onClick={sendValue}\r\n                >\r\n                  send\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {tab !== \"CHATROOM\" && (\r\n            <div className=\"chat-content\">\r\n              <ul className=\"chat-messages\">\r\n                {[...privateChats.get(tab)].map((chat, index) => (\r\n                  <li\r\n                    className={`message ${\r\n                      chat.senderName === userData.username && \"self\"\r\n                    }`}\r\n                    key={index}\r\n                  >\r\n                    {chat.senderName !== userData.username && (\r\n                      <div className=\"avatar\">{chat.senderName}</div>\r\n                    )}\r\n                    <div className=\"message-data\">{chat.message}</div>\r\n                    {chat.senderName === userData.username && (\r\n                      <div className=\"avatar self\">{chat.senderName}</div>\r\n                    )}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n\r\n              <div className=\"send-message\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"input-message\"\r\n                  placeholder=\"enter the message\"\r\n                  value={userData.message}\r\n                  name=\"message\"\r\n                  onChange={handleMessage}\r\n                />\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"file\"\r\n                  name=\"file\"\r\n                  onChange={handleFile}\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"send-button Button\"\r\n                  onClick={sendPrivateValue}\r\n                >\r\n                  send\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <Login\r\n          userData={userData}\r\n          setUserData={setUserData}\r\n          registerUser={registerUser}\r\n        ></Login>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n"]},"metadata":{},"sourceType":"module"}